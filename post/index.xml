<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on niep的博客</title>
    <link>http://www.fdgggy.com/post/</link>
    <description>Recent content in Posts on niep的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Tue, 16 Jul 2019 12:05:08 +0800</lastBuildDate>
    
	<atom:link href="http://www.fdgggy.com/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Linux 源码解析网络编程--socket,bind</title>
      <link>http://www.fdgggy.com/2019/07/16/socket/</link>
      <pubDate>Tue, 16 Jul 2019 12:05:08 +0800</pubDate>
      
      <guid>http://www.fdgggy.com/2019/07/16/socket/</guid>
      <description>scoket() 作用：创建一个通信端点并返回一个引用该端点的文件描述符 int socket(int domain, int type, int protocol); 参数： @domain(协议域),用于通信的协议簇,如: @type 套接字类型，制定通信的语义,如: SOCK_STREAM 有序，可靠，双向，基于连接的字节流 TCP SOCK_DGRAM 数据报,无连接，不可靠，具有固定最大长度 UDP @protocol 协议类型常值,一般设为0，系统设定do</description>
    </item>
    
    <item>
      <title>Linux 源码解析网络编程-listen</title>
      <link>http://www.fdgggy.com/2019/07/16/listen/</link>
      <pubDate>Tue, 16 Jul 2019 12:05:08 +0800</pubDate>
      
      <guid>http://www.fdgggy.com/2019/07/16/listen/</guid>
      <description>listen() int listen(int sockfd, int backlog); 作用：监听套接字上的链接 @sockfd 引用SOCK_STREAM/SOCK_SEQPACKET类型套接字的文件描述符 @backlog 挂起连接的队列的最大长度, ***ddos攻击有关 linux 内核源码 /* * Perform a listen. Basically, we allow the protocol to do anything * necessary for a listen, and if that works, we mark the socket as * ready for listening. */ SYSCALL_DEFINE2(listen, int, fd, int, backlog) { struct socket *sock; int err, fput_needed; int somaxconn; //通过文件</description>
    </item>
    
    <item>
      <title>Linux 源码解析网络编程-I/O模型详解</title>
      <link>http://www.fdgggy.com/2019/07/15/io_model/</link>
      <pubDate>Mon, 15 Jul 2019 12:05:08 +0800</pubDate>
      
      <guid>http://www.fdgggy.com/2019/07/15/io_model/</guid>
      <description>I/O模型 阻塞式I/O模型 socket套接字默认是阻塞的，如果I/O条件未满足，则进程或线程就会被挂起，直到I/O条件满足才返回。常用的IO操作都是阻塞I/O，如read一个已连接的套接字时，如果没有数据，那么就会挂起进程，阻塞等待，直到有数据可读时才返回。 如果采用阻塞式I/O做</description>
    </item>
    
    <item>
      <title>移动端断线重连方案</title>
      <link>http://www.fdgggy.com/2019/07/12/reconnect/</link>
      <pubDate>Fri, 12 Jul 2019 12:05:08 +0800</pubDate>
      
      <guid>http://www.fdgggy.com/2019/07/12/reconnect/</guid>
      <description>一、背景 移动平台下，网络信号变动非常频繁，造成更高的丢包率，更大的延迟抖动，不稳定的网络连接，处理不好，会造成很不好的游戏体验 二、场景 1.2G/3G/4G/WIFI 相互切换时client的IP变化. 2.地理位置变化导致网络制式的转换，手机基站之间的切换. 3.手机HOME/电源键，电话进来. 4.建筑死角，隧道</description>
    </item>
    
  </channel>
</rss>